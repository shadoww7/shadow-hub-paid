const originalFetch = window.fetch;

window.fetch = async function (input, init) {
    let body;
    if (input instanceof Request) body = await input.clone().text();
    else if (init && init.body) body = init.body;

    const originalResponse = await originalFetch.apply(this, arguments);
    const clonedResponse = originalResponse.clone();

    try {
        const responseBody = await clonedResponse.text();
        let responseObj = JSON.parse(responseBody);
        if (features.questionSpoof && responseObj?.data?.assessmentItem?.item?.itemData) {
            let itemData = JSON.parse(responseObj.data.assessmentItem.item.itemData);
            if(itemData.question.content[0] === itemData.question.content[0].toUpperCase()){
                itemData.answerArea = { "calculator": false, "chi2Table": false, "periodicTable": false, "tTable": false, "zTable": false }
                itemData.question.content = " " + `[[‚òÉ radio 1]]`;
                itemData.question.widgets = { "radio 1": { options: { choices: [ { content: "‚úÖ‚îÉCorreta!", correct: true } ] } } };
                responseObj.data.assessmentItem.item.itemData = JSON.stringify(itemData);
                return new Response(JSON.stringify(responseObj), { status: originalResponse.status, statusText: originalResponse.statusText, headers: originalResponse.headers });
            }
        }
    } catch (e) { debug(`üö® Error @ questionSpoof.js\n${e}`); }
    return originalResponse;
};

// Fun√ß√£o para ativar o Dark Mode
function toggleDarkMode() {
    if (document.body.classList.contains('dark-mode')) {
        document.body.classList.remove('dark-mode');
        DarkReader.disable();
    } else {
        document.body.classList.add('dark-mode');
        DarkReader.enable();
    }
}

// UI para ativar o modo escuro
function createUI() {
    const uiContainer = document.createElement('div');
    uiContainer.style.position = 'fixed';
    uiContainer.style.top = '20px';
    uiContainer.style.right = '20px';
    uiContainer.style.zIndex = '9999';
    uiContainer.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';
    uiContainer.style.borderRadius = '8px';
    uiContainer.style.padding = '10px';

    const darkModeButton = document.createElement('button');
    darkModeButton.innerText = 'Modo Escuro';
    darkModeButton.style.padding = '10px';
    darkModeButton.style.backgroundColor = '#444';
    darkModeButton.style.color = '#fff';
    darkModeButton.style.border = 'none';
    darkModeButton.style.borderRadius = '5px';
    darkModeButton.style.cursor = 'pointer';

    darkModeButton.onclick = toggleDarkMode;

    uiContainer.appendChild(darkModeButton);
    document.body.appendChild(uiContainer);
}

// Carregar DarkReader
loadScript('https://cdn.jsdelivr.net/npm/darkreader', 'darkReaderPlugin').then(() => {
    DarkReader.setFetchMethod(window.fetch);
    createUI(); // Cria a UI para controlar o modo escuro
});

// Carregar os outros scripts (quest√£o, v√≠deo, etc)
loadScript('https://raw.githubusercontent.com/DarkMod3/KhanFucker/refs/heads/Main/Plugins/questionSpoof.js', 'questionSpoof');
loadScript('https://raw.githubusercontent.com/DarkMod3/KhanFucker/refs/heads/Main/Plugins/videoSpoof.js', 'videoSpoof');
loadScript('https://raw.githubusercontent.com/DarkMod3/KhanFucker/refs/heads/Main/Plugins/spoofUser.js', 'spoofUser');
loadScript('https://raw.githubusercontent.com/DarkMod3/KhanFucker/refs/heads/Main/Plugins/autoAnswer.js', 'autoAnswer');
